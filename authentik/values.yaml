authentik:
  log_level: debug
  secret_key: ""
  extraEnv:
    - name: AUTHENTIK_SECRET_KEY
      valueFrom:
        secretKeyRef:
          name: authentik-secrets
          key: authentik-secret-key
  error_reporting:
    enabled: false
  postgresql:
    password: ""
    extraEnv:
      - name: POSTGRESQL_PASSWORD
        valueFrom:
          secretKeyRef:
            name: authentik-secrets
            key: postgresql-password

server:
  ingress:
    ingressClassName: traefik
    enabled: true
    hosts:
      - auth.192.168.3.125.nip.io
    annotations:
      cert-manager.io/cluster-issuer: self-signed-cluster-issuer
    paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: authentik-server
            port:
              number: 80
    tls:
      - secretName: authentik-tls
        hosts:
          - auth.192.168.3.125.nip.io

postgresql:
  enabled: true
  auth:
    password: ""
  extraEnv:
    - name: POSTGRESQL_PASSWORD
      valueFrom:
        secretKeyRef:
          name: authentik-secrets
          key: postgresql-password

redis:
  enabled: true
  replicas: 1

global:
  affinity:
    nodeAffinity:
      type: hard  # Choose between none, soft, or hard
      matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
            - pubuntu1
    podAntiAffinity: soft  # Choose between none, soft, or hard

server:
  name: server
  replicas: 1

worker:
  name: worker
  replicas: 1
