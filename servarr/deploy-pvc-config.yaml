apiVersion: v1
kind: Namespace
metadata:
  name: servarr
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: servarr-pv
  namespace: servarr
spec:
  capacity:
    storage: 1000Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-path
  local:
    path: /mnt/servarr2
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - pubuntu1 # Assigned to the ubuntu2 node
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: servarr-pvc
  namespace: servarr
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1000Gi
  volumeName: servarr-pv
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prowlarr-config-pvc
  namespace: servarr
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: radarr-config-pvc
  namespace: servarr
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-config-pvc
  namespace: servarr
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: qbittorrent-config-pvc
  namespace: servarr
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prowlarr
  namespace: servarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prowlarr
  template:
    metadata:
      labels:
        app: prowlarr
    spec:
      containers:
      - name: prowlarr
        image: lscr.io/linuxserver/prowlarr:latest
        ports:
        - containerPort: 9696
        env:
        - name: PUID
          value: "0" # Set to 0 for root user ID
        - name: PGID
          value: "0" # Set to 0 for root group ID
        volumeMounts:
        - name: config-storage
          mountPath: /config
        - name: servarr-storage
          mountPath: /mnt/servarr2
      volumes:
      - name: config-storage
        persistentVolumeClaim:
          claimName: prowlarr-config-pvc
      - name: servarr-storage
        persistentVolumeClaim:
          claimName: servarr-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr
  namespace: servarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      containers:
      - name: radarr
        image: lscr.io/linuxserver/radarr:latest
        ports:
        - containerPort: 7878
        env:
        - name: PUID
          value: "0" # Set to 0 for root user ID
        - name: PGID
          value: "0" # Set to 0 for root group ID
        volumeMounts:
        - name: config-storage
          mountPath: /config
        - name: servarr-storage
          mountPath: /mnt/servarr2
      volumes:
      - name: config-storage
        persistentVolumeClaim:
          claimName: radarr-config-pvc
      - name: servarr-storage
        persistentVolumeClaim:
          claimName: servarr-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  namespace: servarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      containers:
      - name: sonarr
        image: lscr.io/linuxserver/sonarr:latest
        ports:
        - containerPort: 8989
        env:
        - name: PUID
          value: "0" # Set to 0 for root user ID
        - name: PGID
          value: "0" # Set to 0 for root group ID
        volumeMounts:
        - name: config-storage
          mountPath: /config
        - name: servarr-storage
          mountPath: /mnt/servarr2
      volumes:
      - name: config-storage
        persistentVolumeClaim:
          claimName: sonarr-config-pvc
      - name: servarr-storage
        persistentVolumeClaim:
          claimName: servarr-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qbittorrent
  namespace: servarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qbittorrent
  template:
    metadata:
      labels:
        app: qbittorrent
    spec:
      containers:
      - name: qbittorrent
        image: lscr.io/linuxserver/qbittorrent:latest
        ports:
        - containerPort: 8080
        env:
        - name: PUID
          value: "0" # Set to 0 for root user ID
        - name: PGID
          value: "0" # Set to 0 for root group ID
        volumeMounts:
        - name: config-storage
          mountPath: /config
        - name: servarr-storage
          mountPath: /mnt/servarr2
      volumes:
      - name: config-storage
        persistentVolumeClaim:
          claimName: qbittorrent-config-pvc
      - name: servarr-storage
        persistentVolumeClaim:
          claimName: servarr-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: prowlarr
  namespace: servarr
spec:
  ports:
  - port: 9696
    targetPort: 9696
  selector:
    app: prowlarr
---
apiVersion: v1
kind: Service
metadata:
  name: radarr
  namespace: servarr
spec:
  ports:
  - port: 7878
    targetPort: 7878
  selector:
    app: radarr
---
apiVersion: v1
kind: Service
metadata:
  name: sonarr
  namespace: servarr
spec:
  ports:
  - port: 8989
    targetPort: 8989
  selector:
    app: sonarr
---
apiVersion: v1
kind: Service
metadata:
  name: qbittorrent
  namespace: servarr
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: qbittorrent
